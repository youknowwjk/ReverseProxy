<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.autel.cloud.pile.base.infrastructure.mapper.OpLocationConnectorMapper">

        <insert id="batchSave">
            insert into op_location_connector(
            `id`,
            `created_at`,
            `updated_at`,
            `deleted`,
            `status`,
            `location_evse_id`,
            `standard`,
            `format`,
            `power_type`,
            `voltage`,
            `amperage`,
            `tariff_id`,
            `terms_and_conditions`,
            `connector_id`,
            `image_id`,
            `gun_type`,
            `power`
            )
            values
            <foreach collection="insertList" item="it" separator=",">
                (
                #{it.id},
                #{it.createdAt},
                #{it.updatedAt},
                #{it.deleted},
                #{it.status},
                #{it.locationEvseId},
                #{it.standard},
                #{it.format},
                #{it.powerType},
                #{it.voltage},
                #{it.amperage},
                #{it.tariffId},
                #{it.termsAndConditions},
                #{it.connectorId},
                #{it.imageId},
                #{it.gunType},
                #{it.power}
                )
            </foreach>
        </insert>


    <update id="deleteByLocationEvseId" parameterType="Long">
        update op_location_connector
        set deleted = 1
        where location_evse_id = #{id}
    </update>

    <delete id="deleteByLocationEvseIdList" parameterType="list">
        delete from op_location_connector
        <where>
            <if test="_parameter != null and _parameter.size()>0 ">and location_evse_id in
                <foreach item="item" index="index" collection="collection" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </delete>

    <update id="updateByLocationEvseId" parameterType="com.autel.cloud.pile.base.infrastructure.mapper.entity.OpLocationConnectorEntity">
        update op_location_connector
        set updated_at = #{updatedAt}, deleted = #{deleted}, status = #{status}, location_evse_id = #{locationEvseId}
        , standard = #{standard}, format = #{format}, power_type = #{powerType}, voltage = #{voltage}
        , amperage = #{amperage}, tariff_id = #{tariffId}, terms_and_conditions = #{termsAndConditions}
        , connector_id = #{connectorId}, image_id = #{imageId}, gun_type = #{gunType}
        where location_evse_id = #{id}
    </update>

    <select id="paging" parameterType="com.autel.cloud.pile.base.vo.OpLocationConnectorPagingVo"
            resultType="com.autel.cloud.pile.base.dto.OpLocationConnectorPagingDTO">
        SELECT
        c.id as id,
        c.status as status,
        c.location_evse_id as locationEvseId,
        c.power_type as powerType,
        c.voltage as voltage,
        c.amperage as amperage,
        c.tariff_id as tariffId,
        c.connector_id as  connectorId,
        c.gun_type as gunType,
        l.time_zone as timeZone
        FROM
        op_location_connector c
        LEFT JOIN op_location_evse e ON c.location_evse_id = e.id
        LEFT JOIN op_location l ON e.location_id = l.id
        <where>
            <if test="opLocationConnectorPagingVo.locationId != null">
                l.id = #{locationId}
            </if>
            <if test="opLocationConnectorPagingVo.powerType != null">
                and c.power_type = #{powerType}
            </if>
            and c.deleted = 0 and e.deleted = 0 and l.deleted = 0
        </where>
    </select>


    <select id="selectByLocationEvseSn" parameterType="Long" resultType="com.autel.cloud.pile.base.dto.OpLocationConnectorDTO">
        select * from op_location_connector
        where location_evse_id = #{id} AND deleted = 0
    </select>


    <select id="getLocationEvseVOBySnAndGunNo" parameterType="String" resultType="com.autel.cloud.pile.base.vo.OcppLocationEVSEVO">
        select
            t2.id,
            t1.id locationId,
            t1.`operator_id` operatorId,
            t2.`tariff_id` tariffId,
            t1.name locationName,
            t1.address locationAddress,
            t1.time_zone timeZone,
            t1.zone_id zoneId
        from
            `op_location` t1 join `op_location_evse` t2  on t1.id = t2.`location_id` AND t2.deleted = 0
        where t2.evse_sn = #{evseSn} AND t1.deleted = 0
    </select>

    <select id="getLocationByPileSn" parameterType="String" resultType="com.autel.cloud.pile.base.vo.OcppLocationEVSEVO">
        select
        t2.id,
        t1.id locationId,
        t1.`operator_id` operatorId,
        t1.name locationName,
        t1.time_zone timeZone
        from
        `op_location` t1 join `op_location_pile_evse` t2  on t1.id = t2.`location_id` AND t2.deleted = 0
        where  t2.pile_sn=#{pileSn} AND t1.deleted = 0
    </select>

    <select id="getOcppLocationEVSETimeZoneVOList" resultType="com.autel.cloud.pile.base.vo.OcppLocationEVSETimeZoneVO">

        SELECT
        t2.evse_sn evseSn, t1.time_zone zoneId
        FROM
        `op_location` t1
        JOIN `op_location_evse` t2 ON t1.id = t2.`location_id`
        AND t2.deleted = 0
        where  t1.deleted = 0 AND t2.evse_sn in
        <foreach collection="evseSnList" item="evseSn" index="," open="(" separator="," close=")">
            (
            #{evseSn}
            )
        </foreach>

    </select>


</mapper>
