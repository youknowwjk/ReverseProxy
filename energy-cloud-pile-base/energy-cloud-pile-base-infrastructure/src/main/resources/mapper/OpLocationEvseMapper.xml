<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.autel.cloud.pile.base.infrastructure.mapper.OpLocationEvseMapper">
    <insert id="batchSave">
        insert into op_location_evse(
        `id`,
        `created_at`,
        `updated_at`,
        `deleted`,
        `status`,
        `location_id`,
        `state`,
        `evse_id`,
        `floor_level`,
        `latitude`,
        `longitude`,
        `physical_reference`,
        `parking_restrictions`,
        `pin_code`,
        `tariff_id`,
        `evse_sn`,
        `deleted_time`
        )
        values
        <foreach collection="insertList" item="it" separator=",">
            (
            #{it.id},
            #{it.createdAt},
            #{it.updatedAt},
            #{it.deleted},
            #{it.status},
            #{it.locationId},
            #{it.state},
            #{it.evseId},
            #{it.floorLevel},
            #{it.latitude},
            #{it.longitude},
            #{it.physicalReference},
            #{it.parkingRestrictions},
            #{it.pinCode},
            #{it.tariffId},
            #{it.evseSn},
            #{it.deletedTime}
            )
        </foreach>
    </insert>
    <update id="deleteByEvseId" parameterType="java.lang.Long">
        update op_location_evse
        set deleted = 1,deleted_time = REPLACE(unix_timestamp(current_timestamp(3)),'.','')
        where id = #{id}
    </update>


    <update id="deleteByPileSN" parameterType="string">
        update op_location_evse
        set deleted = 1,deleted_time = REPLACE(unix_timestamp(current_timestamp(3)),'.','')
        where evse_sn like concat(concat("%",#{pileSN}),"%")
    </update>

    <select id="mapQuery" parameterType="com.autel.cloud.pile.base.dto.OpLocationMapQueryDTO"
            resultType="com.autel.cloud.pile.base.vo.OpLocationEvseMapQueryVO">
        select
        a.id,
        a.created_at,
        a.updated_at,
        a.deleted,
        a.status ,
        a.location_id,
        a.state,
        a.evse_id,
        a.floor_level,
        a.latitude,
        a.longitude,
        a.physical_reference,
        a.parking_restrictions,
        a.pin_code,
        a.tariff_id,
        a.evse_sn,
        b.power,
        b.gun_type
        from op_location_evse a
        inner join op_location_connector b on b.location_evse_id =a.id
        <where>
            <!--功率 -->
            <if test="highPower != null  and highPower != '' ">and b.power &lt;= #{highPower}</if>
            <if test="lowPower != null  and lowPower != '' ">and b.power &gt;= #{lowPower}</if>
            <!--枪类型 -->
            <if test="gunTypes != null and gunTypes.size()>0 ">and b.gun_type in
                <foreach item="item" index="index" collection="gunTypes" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <!--是否可用 0表示空闲1表示繁忙 -->
            <if test="isEnable != null and isEnable != '' ">and a.status = #{isEnable}</if>
        </where>

    </select>
    <select id="selectPageByKeyword" resultType="com.autel.cloud.pile.base.vo.PileDetailVO">
        select
        l.id as locationId,
        l.name as locationName,
        p.id as pileId,
        p.name as pileName,
        p.evse_list as evseList,
        p.pile_sn as pileSn
        from op_location_pile_evse p
        left join op_location l on l.id = p.location_id
        where l.operator_id = #{params.sellerId} and l.deleted = 0 and p.deleted = 0
        <if test="params.keyword != null and params.keyword != '' ">
            and p.pile_sn like concat('%',#{params.keyword},'%')
        </if>
        <if test="params.locationIds != null and params.locationIds.size() > 0">
            and l.id in
            <foreach collection="params.locationIds" open="(" close=")" item="it" separator=",">
                #{it}
            </foreach>
        </if>
        <if test="params.pileIds != null and params.pileIds.size() > 0">
            and p.id in
            <foreach collection="params.pileIds" open="(" close=")" item="it" separator=",">
                #{it}
            </foreach>
        </if>
    </select>
    <select id="getPileInfoByPileSn" parameterType="java.util.List" resultType="com.autel.cloud.pile.base.dto.HubPileDTO">
        SELECT
            p.location_id AS locationId,
            p.pile_sn AS pileSn,
            l.hubject_check AS hubjectCheck
        FROM op_location_pile_evse p
        INNER JOIN op_location l ON p.location_id = l.id
        <where>
            l.deleted = 0 AND p.deleted = 0 AND p.pile_sn IN
            <foreach collection="pileSnList" item="pileSn" index="index" open="(" separator="," close=")">
                #{pileSn}
            </foreach>
        </where>
    </select>


    <select id="batchQueryPileBindTime" resultType="com.autel.cloud.pile.base.vo.PileBindTimeVO">
        SELECT
            created_at createdAt,
            evse_sn sn
        FROM
            op_location_evse
        Where
            deleted = 0
          AND  evse_sn in
        <foreach collection="snList" item="sn" index="index" open="(" separator="," close=")">
            #{sn}
        </foreach>
    </select>
</mapper>
