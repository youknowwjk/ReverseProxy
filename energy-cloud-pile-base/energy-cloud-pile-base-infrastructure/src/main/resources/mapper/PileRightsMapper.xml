<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.autel.cloud.pile.base.infrastructure.mapper.PileRightsMapper">
    <select id="getHaveRightsPileList" parameterType="com.autel.cloud.pile.base.vo.AgreementFunctionReqVo" resultType="com.autel.cloud.pile.base.dto.AgreementFunctionDetailDto">
        SELECT
            l.tenant_id,
            l.pile_sn,
            l.available_time,
            l.unavailable_time,
            l.service_id,
            l.status
        FROM
            tb_len_bind_relation l
        WHERE
            1 = 1
            <if test="agreementFunctionReqVo.status == 1">
                AND  l.unavailable_time > #{agreementFunctionReqVo.currentTimeStamp}
                and  #{agreementFunctionReqVo.currentTimeStamp} > l.available_time
            </if>
            <if test="agreementFunctionReqVo.status == 2">
                AND  #{agreementFunctionReqVo.currentTimeStamp} > l.unavailable_time
            </if>
            <if test="agreementFunctionReqVo.tenantId != null">
                AND l.tenant_id = #{agreementFunctionReqVo.tenantId}
            </if>
            <if test="agreementFunctionReqVo.pileSn != null and agreementFunctionReqVo.pileSn.size() > 0">
                AND l.pile_sn IN
                <foreach collection="agreementFunctionReqVo.pileSn" item="item" index="index" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
    </select>

    <update id="updatePendingStatus" parameterType="java.lang.Long">
        UPDATE tb_len_bind_relation
        SET `status` = 1
        WHERE
            id IN (
                SELECT
                    id
                FROM
                    (
                        SELECT
                            id
                        FROM
                            tb_len_bind_relation
                        WHERE
                            #{currentTimestamps} > available_time
                        and  unavailable_time > #{currentTimestamps}
                        AND `status` = 3
                        LIMIT 200
                    ) tb_inner
            )
    </update>

    <update id="updateExpiredOtherRights">
        UPDATE tb_len_bind_relation
        SET `status` = 2
        WHERE
            id IN (
                SELECT
                    id
                FROM
                    (
                        SELECT
                            id
                        FROM
                            tb_len_bind_relation
                        WHERE
                            #{currentTimestamps} > unavailable_time
                        AND `status` = 1
                        <if test="functionBenefitList != null and functionBenefitList.size > 0">
                            AND service_id NOT IN
                            <foreach collection="functionBenefitList" item="id" open="(" close=")" separator=",">
                                #{id}
                            </foreach>
                        </if>
                        LIMIT 200
                    ) tb_inner
            )
    </update>
    
    <update id="agreementStatus" parameterType="java.lang.String">
        UPDATE tb_honour_agreement
        SET remark = ( ifnull( remark, 0 ) + 1 )
        WHERE
            order_id = #{orderId}
    </update>

    <select id="selectUnBindLicence" parameterType="com.autel.cloud.pile.base.dto.subscribe.UnusedLicenceQueryParam" resultType="com.autel.cloud.pile.base.infrastructure.mapper.entity.TbLenBindRelationEntity">
        SELECT
        *
        FROM
        tb_len_bind_relation r
        WHERE
        r.STATUS = 0
        AND r.available_time IS NULL
        AND
        CASE

        WHEN #{unusedLicenceQueryParam.boundaryMilliSec} > r.create_time THEN
        #{unusedLicenceQueryParam.currentTimeMilliSec} > r.create_time + #{unusedLicenceQueryParam.extend180DaysMilliSec} + ifnull(r.extended_grace_period,0) * 24 * 3600 * 1000
        ELSE #{unusedLicenceQueryParam.currentTimeMilliSec} > r.create_time + #{unusedLicenceQueryParam.extend90DaysMilliSec} + ifnull(r.extended_grace_period,0) * 24 * 3600 * 1000  END
        limit 100
    </select>

</mapper>
